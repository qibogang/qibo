name: Deploy docs


on: 
  workflow_dispatch:
  push:
      branches: [master,versions] # TODO: remove branch versions 
      tags:
  
jobs:
  evaluate-label:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.label_step.outputs.version}}
    steps:
      - run: echo ${{ github.event_name }} #TODO: remove this debugging line 
      - run: echo ${{ github.ref }} # TODO: remove this debugging line 
      - name: checks for the label 
        id: label_step 
        run: |
          if [[ "${{ github.event_name }}" == "push" ]] && [[ "${{ github.ref  }}" == "refs/heads/versions" ]]; then
                echo "version=latest" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "push" ]] && [[ "${{ github.ref  }}" != "refs/heads/versions" ]]; then
                echo "version=Error" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "tag" ]]; then
                echo "version=stable" >> $GITHUB_OUTPUT
          fi 

  generate-docs:
    needs: [evaluate-label]
    if: needs.evaluate-label.outputs.label != 'Error'
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.evaluate-label.outputs.label}} # TODO: remove this debugging line 

  deploy-docs:
    uses: qibogang/workflows/.github/workflows/deploy-sphinx-docs-to-ghpages.yml@main
    with:
      python-version: 3.9
      package-manager: 'pip'
      dependency-path: '**/setup.py'

  # The following job should be included in the 
  # deploy-sphinx-docs-to-ghpages.yml.
  # This is only a test 
  new-artifact:
    needs: [deploy-docs, evaluate-label]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: ls # TODO: remove this debugging line 
    - uses: actions/download-artifact@v3
      with:
        name: github-pages  
    - run: | # TODO: remove this debugging line
        ls 
        pwd 
    - name: generate the ${{needs.evaluate-label.outputs.label}} documentation 
      run: |
        label=${{needs.evaluate-label.outputs.label}}
        mkdir new_docs
        mv artifact.tar "${label}.tar" 
        mv "${label}.tar" new_docs/
        cd new_docs
        ls # TODO: remove debugging line 
        mkdir $label
        tar -xf "${label}.tar" -C "${label}/" 
        ls ../new_docs # TODO: remove this debugging line
    - name: generate the remaning documentation
      run: | # !!!!!!!!! Move the job !!!!!!!
        label=${{needs.evaluate-label.outputs.label}} 
        cd new_docs
        if [[ ${label} == "latest" ]]; 
          then 
            missing_doc="stable"
          else
            missing_doc="latest"
        fi
        URL="https://qibogang.github.io/qibo/${missing_doc}/${missing_doc}"
        mkdir "$missing_doc"
        # Check if it is possible to connect to the website 
        # Otherwise it copies the existing docs
        if wget --spider "${URL}" 2>/dev/null; then 
            wget "$URL"  
        else
            cp "${label}.tar" "${missing_doc}.tar"
        fi   
        tar -xf "${missing_doc}.tar" -C "${missing_doc}/"
        echo "generate remaning doc" # TODO: remove this debugging line
        ls # TODO: remove this debugging line
        echo "let see in stable folder" # TODO: remove this debugging line
        ls stable # TODO: remove this debugging line
    - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: "new-docs"
          path: new_docs/
